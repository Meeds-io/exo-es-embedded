#################################### Cluster ##################################

# Cluster name identifies your cluster for auto-discovery. If you're running
# multiple clusters on the same network, make sure you're using unique names.
#
cluster.name: ${es.cluster.name:exoplatform-es}

#################################### Node #####################################

# Node names are generated dynamically on startup, so you're relieved
# from configuring them manually. You can tie this node to a specific name:
#
node.name: ${es.node.name:exoplatform-es-embedded}

# Every node can be configured to allow or deny being eligible as the master,
# and to allow or deny to store the data.
#
# Allow this node to be eligible as a master node (enabled by default):
#
node.master: true
#
# Allow this node to store data (enabled by default):
#
node.data: true

path.logs: logs

# Home Path:
#
path.home: es

# Path to directory where to store index data allocated for this node.
#
path.data: ${es.path.data:${exo.data.dir\}/${es.cluster.name:exoplatform-es\}}

############################## Network And HTTP ###############################

# Enabled HTTP completely:
#
http.enabled: true

# Don't try to build a cluster by default
# Transport configuration
#
network.host: _local_
transport.type: local
http.type: netty4
http.port: ${es.http.port:9200}

################################## Discovery ##################################

# Unicast discovery allows to explicitly control which nodes will be used
# to discover the cluster.
#
discovery.zen.ping.unicast.hosts: ${es.discovery.zen.ping.unicast.hosts:["127.0.0.1"]}
