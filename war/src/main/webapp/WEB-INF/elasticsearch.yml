################################### Cluster ###################################

# Cluster name identifies your cluster for auto-discovery. If you're running
# multiple clusters on the same network, make sure you're using unique names.
#
cluster.name: exoplatform-es

#################################### Node #####################################

# Node names are generated dynamically on startup, so you're relieved
# from configuring them manually. You can tie this node to a specific name:
#
node.name: exoplatform-es-embedded

# Every node can be configured to allow or deny being eligible as the master,
# and to allow or deny to store the data.
#
# Allow this node to be eligible as a master node (enabled by default):
#
node.master: true
#
# Allow this node to store data (enabled by default):
#
node.data: true

# Home Path:
#
path.home: es

# Path to directory where to store index data allocated for this node.
#
path.data: ${exo.data.dir}

# Path to where plugins are installed:
#
path.plugins: es/plugins

############################## Network And HTTP ###############################

# Enabled HTTP completely:
#
http.enabled: true

# Set both 'bind_host' and 'publish_host':
#
network.host: 127.0.0.1

################################## Discovery ##################################

# Unicast discovery allows to explicitly control which nodes will be used
# to discover the cluster. It can be used when multicast is not present,
# or to restrict the cluster communication-wise.
#
# 1. Disable multicast discovery (enabled by default):
#
discovery.zen.ping.multicast.enabled: false
#
# 2. Configure an initial list of master nodes in the cluster
#    to perform discovery when new nodes (master or data) are started:
#
discovery.zen.ping.unicast.hosts: ["127.0.0.1"]
